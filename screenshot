#!/bin/sh

# prompt the user to select a screenshot type then do that screenshot

notify_interactive_mode () {
    notify-send "Screenshot üíª" "Screenshotting in \"${1}\" mode" --expire-time=1000
}

notify_selection_cancelled () {
    notify-send "Screenshot üôÖ‚Äç‚ôÄÔ∏è" "Selection cancelled" --expire-time=2500
}

screenshot_options=(
   "screen"
   "screen-with-cursor"
   "window"
   "selection"
)

screenshot_type=$(\
    echo ${screenshot_options[*]} \
        | tr "[:space:]" '\n' \
        | floating-fzf
)

if [ $? -ne 0 ]; then
    notify-send "Screenshot ü§∑‚Äç‚ôÇÔ∏è" "No screenshot mode chosen" --expire-time=2500
    exit 1
fi


case "$screenshot_type" in
    "screen")
        grim
        ;;
    "screen-with-cursor")
        grim -c
        ;;
    "selection")
        notify_interactive_mode "selection"
        selection_rectangle=$(slurp)
        if [ $? -ne 0 ]; then
            notify_selection_cancelled
            exit 1
        fi
        grim -g "${selection_rectangle}"
        ;;
    "window")
        notify_interactive_mode "window"
        # Use slurp to get the borders of a window
        window_borders=$(\
            swaymsg -t get_tree \
                | jq -r '.. | select(.pid? and .visible?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' \
                | slurp
        )
        if [ $? -ne 0 ]; then
            notify_selection_cancelled
            exit 1
        fi
        grim -g "${window_borders}"
        ;;
    *)
        notify-send "Screenshot ü§∑‚Äç‚ôÇÔ∏è" "Unrecognized mode: ${screenshot_type}" --expire-time=2500
        exit 1
        ;;
esac

notify-send --expire-time=2500 "Screenshot üëç" "Screenshot captured!"
